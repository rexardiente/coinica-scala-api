# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ket
GET     /ws                                  	controllers.HomeController.socket

GET     /                                        controllers.HomeController.index
# Challenge API
GET     /donut/api/v1/challenge/weekly               controllers.HomeController.challengedate(startdate: java.time.Instant, enddate: Option[java.time.Instant], limit: Int ?= 50, offset: Int ?= 0)
GET     /donut/api/v1/challenge/daily                controllers.HomeController.challengedaily(startdate: java.time.Instant, enddate: Option[java.time.Instant], limit: Int ?= 50, offset: Int ?= 0)
GET     /donut/api/v1/challenge/monthly              controllers.HomeController.challengedate(startdate: java.time.Instant, enddate: Option[java.time.Instant], limit: Int ?= 50, offset: Int ?= 0)

GET     /                                        controllers.HomeController.index
# Ranking API
GET     /donut/api/v1/ranking/weekly               controllers.HomeController.rankingdate(startdate: java.time.Instant, enddate: Option[java.time.Instant], limit: Int ?= 50, offset: Int ?= 0)
GET     /donut/api/v1/ranking/daily                controllers.HomeController.rankingdaily(currentdate: java.time.Instant, limit: Int ?= 50, offset: Int ?= 0)
GET     /donut/api/v1/ranking/monthly              controllers.HomeController.rankingdate(startdate: java.time.Instant, enddate: Option[java.time.Instant], limit: Int ?= 50, offset: Int ?= 0)

GET     /                                        controllers.HomeController.index
# Referral API
GET     /donut/api/v1/referral/weekly               controllers.HomeController.referraldate(startdate: java.time.Instant, enddate: Option[java.time.Instant], limit: Int ?= 50, offset: Int ?= 0)
GET     /donut/api/v1/referral/daily                controllers.HomeController.referraldaily(currentdate: java.time.Instant, limit: Int ?= 50, offset: Int ?= 0)
GET     /donut/api/v1/referral/monthly              controllers.HomeController.referralmonthly(startdate: java.time.Instant, enddate: Option[java.time.Instant], limit: Int ?= 50, offset: Int ?= 0)

GET     /                                        controllers.HomeController.index
# Task API
#GET     /donut/api/v1/tasks                      controllers.HomeController.tasks(limit: Int, offset: Int)
#GET     /donut/api/v1/task/find                  controllers.HomeController.findTaskByID(id: UUID, limit: Int, offset: Int)
GET     /donut/api/v1/tasks                      controllers.HomeController.paginatedResult(limit: Int ?= 10, offset: Int ?= 1)
GET     /donut/api/v1/task/weekly                controllers.HomeController.taskdate(startdate: java.time.Instant, enddate: Option[java.time.Instant], limit: Int ?= 50, offset: Int ?= 0)
GET     /donut/api/v1/task/daily                controllers.HomeController.taskdaily(currentdate: java.time.Instant, limit: Int ?= 50, offset: Int ?= 0)
GET     /donut/api/v1/task/monthly                controllers.HomeController.taskmonthly(startdate: java.time.Instant, enddate: Option[java.time.Instant], limit: Int ?= 50, offset: Int ?= 0)


# Game API
GET     /donut/api/v1/games                      controllers.HomeController.games
GET     /donut/api/v1/game/find                  controllers.HomeController.findGameByID(id: UUID)
POST    /donut/api/v1/game/add                   controllers.HomeController.addGame
PUT     /donut/api/v1/game/update              	 controllers.HomeController.updateGame(id: UUID)
POST    /donut/api/v1/game/remove                controllers.HomeController.removeGame(id: UUID)

# Genre API
GET     /donut/api/v1/genres                     controllers.HomeController.genres

# An example controller showing a sample home page
# WebsocGET     /donut/api/v1/genre/find                 controllers.HomeController.findGenreByID(id: UUID)
POST    /donut/api/v1/genre/add                  controllers.HomeController.addGenre
PUT     /donut/api/v1/genre/update               controllers.HomeController.updateGenre(id: UUID)
POST    /donut/api/v1/genre/remove               controllers.HomeController.removeGenre(id: UUID)

# Transaction API
GET    /donut/api/v1/txs               			 controllers.HomeController.transactions(start: java.time.Instant, end: Option[java.time.Instant], limit: Int ?= 10, offset: Int ?= 0)
GET    /donut/api/v1/tx/find              	 	 controllers.HomeController.transactionByTraceID(trace_id: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
