play.http.secret.key="X2aNUZPThOamL2skZO5J]tJOiPKLj[26@Pd5pbNUd?3`Wgg>zUcB]BBKucq3UC1F"
# https://www.playframework.com/documentation/latest/Configuration

# You can disable evolutions for a specific datasource if necessary
play {
  server.http.idleTimeout=180s
  modules {
    enabled += utils.SchemaGenerationModule
    enabled += utils.VIPModule
    enabled += utils.DBMockupModule
    enabled += utils.SchedulerModule
  }
  evolutions {
    db.default.enabled = true
  }

  http {
    idleTimeout=180s
  # Session configuration
    session = {

      # The cookie name
      cookieName = "EGS_SESSION"

      # Whether the secure attribute of the cookie should be set to true
      secure = false

      # The max age to set on the cookie.
      # If null, the cookie expires when the user closes their browser.
      # An important thing to note, this only sets when the browser will discard the cookie.
      maxAge = null

      # Whether the HTTP only attribute of the cookie should be set to true
      httpOnly = false

      # The value of the SameSite attribute of the cookie. Set to null for no SameSite attribute.
      # Possible values are "lax" and "strict". If misconfigured it's set to null.
      sameSite = "lax"

      # The domain to set on the session cookie
      # If null, does not set a domain on the session cookie.
      domain = null

      # The session path
      # Must start with /.
      # path = ${play.http.context}

      jwt {
        # The JWT signature algorithm to use on the session cookie
        # uses 'alg' https://tools.ietf.org/html/rfc7515#section-4.1.1
        # signatureAlgorithm = "HS256"

        # The time after which the session is automatically invalidated.
        # Use 'exp' https://tools.ietf.org/html/rfc7519#section-4.1.4
        # expiresAfter = ${play.http.session.maxAge}

        # The amount of clock skew to accept between servers when performing date checks
        # If you have NTP or roughtime synchronizing between servers, you can enhance
        # security by tightening this value.
        # clockSkew = 5 minutes

        # The claim key under which all user data is stored in the JWT.
        # dataClaim = "data"
      }
    }
  }
}

akka.http {
  server {
    idle-timeout = 180s
  }
}
platform {
  games {
    # [code, table, scope]
    contracts {
      ghostquest = ["ghostquest", "users", "ghostquest", "0f335579-1bf8-4f9e-8ede-eb204f5c0cba"]
      treasurehunt = ["treasurehunt", "users", "treasurehunt", "1b977a2b-842e-430b-bd1b-c0bd3abe1c55"]
      mahjonghilo = ["mahjonghilo", "users", "mahjonghilo", "74cd374c-6126-495a-a8a3-33db87caa511"]
    }
    # in minute
    GQ.battle.timer = 30
  }
  # in hour
  default.system.scheduler = 24
}
eosio {
  eosjs.node.server {
    uri = "http://3.36.96.196:3006"
  }
  #wallets {
  #  public {
  #    default.key = "EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV"
  #  }
  #  private {
  #    server.default.key = "PW5J1SRuNCGqutRsm5RRvTze4CCH8mVX5aShNcdWSNUTZLGo2FB1s"
  #    local.default.key = "PW5J9srswAQKDMAhCKHer5pdKczsq5heMafi9DSqT28YrgvuDXApV"
  #  }
  #}
  #uri {
  #  keosd = "http://127.0.0.1:8889"
  #  nodeos = "http://127.0.0.1:8888"
  #  path {
  #    sign_transaction = "/v1/wallet/sign_transaction"
  #    get_info = "/v1/chain/get_info"
  #    get_table_rows = "/v1/chain/get_table_rows"
  #    abi_json_to_bin = "/v1/chain/abi_json_to_bin"
  #    abi_bin_to_json = "/v1/chain/abi_bin_to_json"
  #    get_block = "/v1/chain/get_block"
  #  }
  #}
  # chain.id = "8a34ec7df1b8cd06ff4a8abbaa7cc50300823350cadc59ab296cb00d104d2b8f"
}

# Default DB - PostgreSQL
slick.dbs {
  default.profile="utils.db.PostgresDriver$"
  default.db.driver="org.postgresql.Driver"
  default.db.url="jdbc:postgresql://egstestnet.c0sbycxy91fz.ap-northeast-2.rds.amazonaws.com/EGS_TEST_NET"
  default.db.user="EGS_TEST_NET"
  default.db.password="EGS_TEST_NET"
  default.db.keepAliveConnection=true
}

play.http.secret.key=${?APPLICATION_SECRET}
play.filters.enabled += play.filters.cors.CORSFilter
play.filters.enabled += play.filters.hosts.AllowedHostsFilter

play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  allowed = ["127.0.0.1:9000", "37.44.244.221:9000", "3.36.96.196:9000"]
}